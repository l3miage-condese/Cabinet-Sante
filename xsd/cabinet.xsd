<?xml version="1.0"?>
<!--
Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
Click nbfs://nbhost/SystemFileSystem/Templates/XML/XmlSchema.xsd to edit this template
-->

<xs:schema version="1.0"
           targetNamespace="http://www.ujf-grenoble.fr/l3miage/medical"
           xmlns:cab="http://www.ujf-grenoble.fr/l3miage/medical"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           elementFormDefault="qualified">
    
    <!--ici on définit la racine -->
    <xs:element name="cabinet" type="cab:Cabinet">
        
        <!-- contrainte d'unicité sur les identifiants des infirmiers -->
        <xs:key name="id_infirmier">
            <xs:selector xpath=".//cab:infirmiers/cab:infirmier"/>
            <xs:field xpath="@id" />
        </xs:key>
        
        <!-- Verification d'existance des identifiants des infirmiers auquels se 
        réfèrent les patients -->
        <xs:keyref name="id_existe" refer="cab:id_infirmier">
            <xs:selector xpath=".//cab:patients/cab:patient/cab:visite" />
            <xs:field xpath="@intervenant" />
        </xs:keyref>
            
    </xs:element> 
    
    
    <!-- ici on définitle type Cabinet -->
    <xs:complexType name="Cabinet">
        <xs:sequence>
            <xs:element name="nom" type="xs:string"/>
            <xs:element name="adresse" type="cab:TypeAdresse"/>
            <xs:element name="infirmiers" type="cab:TypeInfirmiers"/>
            <xs:element name="patients" type="cab:TypePatients"/>
        </xs:sequence>   
    </xs:complexType>
    
    
    <!-- ici on définit le type TypeAdresse -->
    <xs:complexType name="TypeAdresse">
        <xs:sequence>
            <xs:element name="étage" type="xs:int" minOccurs="0" maxOccurs="1" />
            <xs:element name="numéro" type="xs:int" minOccurs="0" maxOccurs="1" />
            <xs:element name="rue" type="xs:string" maxOccurs="1"/>
            <xs:element name="ville" type="xs:string" maxOccurs="1"/>
            <xs:element name="codePostal" type="cab:CodePostal" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>
    
    <!-- ici on définit le type CodePostal -->
     <xs:simpleType name="CodePostal">
        <xs:restriction base="xs:int">
            <xs:pattern value="\d{5}"/>                
        </xs:restriction>
    </xs:simpleType>
    
    <!-- ici on définit le type TypeInfirmiers -->
    <xs:complexType name="TypeInfirmiers">
        <xs:sequence>
            <xs:element name="infirmier" type="cab:Typeinfirmier" minOccurs="3" maxOccurs="unbounded"/>
        </xs:sequence>
        
    </xs:complexType>
    
    
    <!-- ici on définit le type Typeinfirmier -->
    <xs:complexType name="Typeinfirmier">
        <xs:sequence>
            <xs:element name="nom" type="xs:string"/>
            <xs:element name="prénom" type="xs:string"/>
            <xs:element name="photo" type="cab:Type_photo"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:int" use="required" />  
    </xs:complexType>
    
    <!-- ici on définit le type photo -->
    <xs:simpleType name="Type_photo">
        <xs:restriction base="xs:string">
            <xs:pattern value="[A-Za-z0-9]*\.(jpg|png|jpeg)"/>
        </xs:restriction>
    </xs:simpleType>

    
    <!-- ici on définit le type TypePatients -->
    <xs:complexType name="TypePatients">
        <xs:sequence>
            <xs:element name="patient" type="cab:Typepatient" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    
    
    <!-- ici on définit le type Typepatient -->
    <xs:complexType name="Typepatient">
        <xs:sequence>
            <xs:element name="nom" type="xs:string"/>
            <xs:element name="prénom" type="xs:string"/>
            <xs:element name="sexe" type="cab:TypeSexe"/>
            <xs:element name="naissance" type="xs:date"/>
            <xs:element name="numéro" type="cab:Numero_Secu" minOccurs="1" maxOccurs="1"/>
            <xs:element name="adresse" type="cab:TypeAdresse"/>
            <xs:element name="visite" type="cab:TypeVisite" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    
    <!-- ici on définit le type TypeSexe -->
    <xs:simpleType name="TypeSexe">
        <xs:restriction base="xs:string">
            <xs:enumeration value="F"/>
            <xs:enumeration value="M"/>
        </xs:restriction>
    </xs:simpleType>
    
    <!-- Définition du numéro de la sécurité sociale à modifier-->
    <xs:simpleType name="Numero_Secu">
        <xs:restriction base="xs:string">
            <xs:pattern value="(1|2|3|4)[0-9]{2}(0[1-9]|1[0-2])(2[AB]|[0-9]{2})[0-9]{3}[0-9]{3}([0-9]{2})"/>
        </xs:restriction> 
    </xs:simpleType>
    
    <!-- ici on définit le type TypeVisite -->
    <xs:complexType name="TypeVisite">
        <xs:sequence>
            <xs:element name="acte" type="cab:TypeActe" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="date" type="xs:date"/>
        <xs:attribute name="intervenant" type="cab:ID"/>
    </xs:complexType>
    
    
    <!-- ici on définit le type TypeActe -->
    <xs:complexType name="TypeActe">
        <xs:attribute name="id" type="cab:ID"/>
    </xs:complexType>
    
    <!-- ici on définit le type ID-->
    <xs:simpleType name="ID">
        <xs:restriction base="xs:int">
            <xs:pattern value="\d{3}"/>
        </xs:restriction>
    </xs:simpleType>
    

</xs:schema>
